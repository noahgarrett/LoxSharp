program		   -> declaration* EOF ;

declaration	   -> varDecl | statement ;

varDecl		   -> "var" IDENTIFIER ( "=" expression )? ";" ;

statement	   -> exprStmt | ifStmt | printStmt | block ;

ifStmt		   -> "if" "(" expression ")" statement ( "else" statement )? ;

block		   -> "{" declaration* "}" '

printStmt	   -> "print" expression ";" ;

exprStmt	   -> expression ";" ;

expression	   -> assignment ;

assignment	   -> IDENTIFIER "=" assignment | logic_or ;

logic_or	   -> logic_and ( "or" logic_and )* ;

logic_and	   -> equality ( "and" equality )* ;

equality	   -> comparison ( ( "!=" | "==" ) comparison )* ;

comparison	   -> term ( ( ">" | ">=" | "<" | "<=" ) term )* ;

term		   -> factor ( ( "-" | "+" ) factor )* ;

factor		   -> unary ( ( "/" | "*" ) unary )* ;

unary		   -> ( "!" | "-" ) unary
				| primary ;

primary		   -> IDENTIFIER | NUMBER | STRING | "true" | "false" | "nil" | "(" expression ")" ;